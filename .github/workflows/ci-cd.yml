name: CI/CD Pipeline

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: |
        docker build -t myapp .  # Se o nome da sua imagem for diferente, altere "myapp" aqui.

    - name: Run Docker container locally (opcional, para testar)
      run: |
        docker run -d -p 3000:3000 myapp  # Caso precise, altere a porta ou o nome da aplicação.

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 

    - name: Deploy to AWS EC2
      env:
        EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
       
        echo "$EC2_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

       
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_PUBLIC_IP << 'EOF'
         
          sudo yum install -y docker
          sudo service docker start

          
          docker pull myapp:latest  # Altere "myapp" para o nome correto da sua imagem, se necessário.

          
          docker stop myapp || true
          docker rm myapp || true

         
          docker run -d -p 3000:3000 --name myapp myapp:latest  # Altere conforme necessário.
        EOF
